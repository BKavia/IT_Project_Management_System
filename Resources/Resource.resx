<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Administrator" xml:space="preserve">
    <value>Administrator</value>
  </data>
  <data name="Allrightsreserved2018" xml:space="preserve">
    <value>All rights reserved 2018</value>
  </data>
  <data name="BackToList" xml:space="preserve">
    <value>Back to list</value>
  </data>
  <data name="Comments" xml:space="preserve">
    <value>Comments</value>
  </data>
  <data name="CommentBy" xml:space="preserve">
    <value>Comment By</value>
  </data>
  <data name="CommentDate" xml:space="preserve">
    <value>Comment Date</value>
  </data>
  <data name="CommentRequired" xml:space="preserve">
    <value>Comment is required</value>
  </data>
  <data name="CommentTask" xml:space="preserve">
    <value>Task</value>
  </data>
  <data name="Completed" xml:space="preserve">
    <value>Completed</value>
  </data>
  <data name="CreateNew" xml:space="preserve">
    <value>Create New</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="Details" xml:space="preserve">
    <value>Details</value>
  </data>
  <data name="DocumentFile" xml:space="preserve">
    <value>Document File</value>
  </data>
  <data name="DocumentTask" xml:space="preserve">
    <value>Document Task</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="English" xml:space="preserve">
    <value>English</value>
  </data>
  <data name="FileRequired" xml:space="preserve">
    <value>File is required</value>
  </data>
  <data name="French" xml:space="preserve">
    <value>French</value>
  </data>
  <data name="InProgress" xml:space="preserve">
    <value>In Progress</value>
  </data>
  <data name="LogOut" xml:space="preserve">
    <value>Log Out</value>
  </data>
  <data name="TeamMember" xml:space="preserve">
    <value>Team Member</value>
  </data>
  <data name="NotStarted" xml:space="preserve">
    <value>Not Started</value>
  </data>
  <data name="Profile" xml:space="preserve">
    <value>Profile</value>
  </data>
  <data name="ProjectDescription" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="ProjectDescriptionRequired" xml:space="preserve">
    <value>Description is required</value>
  </data>
  <data name="ProjectEndDate" xml:space="preserve">
    <value>End Date</value>
  </data>
  <data name="ProjectKey" xml:space="preserve">
    <value>Key</value>
  </data>
  <data name="ProjectKeyRequired" xml:space="preserve">
    <value>Key is required</value>
  </data>
  <data name="ProjectManager" xml:space="preserve">
    <value>Project Manager</value>
  </data>
  <data name="ProjectName" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="ProjectNameRequired" xml:space="preserve">
    <value>Name is required</value>
  </data>
  <data name="ProjectPM" xml:space="preserve">
    <value>Project Manager</value>
  </data>
  <data name="ProjectPMRequired" xml:space="preserve">
    <value>Project Manager is required</value>
  </data>
  <data name="Projects" xml:space="preserve">
    <value>Projects</value>
  </data>
  <data name="ProjectStartDate" xml:space="preserve">
    <value>Start Date</value>
  </data>
  <data name="ProjectStartDateRequired" xml:space="preserve">
    <value>Start Date is required</value>
  </data>
  <data name="ProjectStatus" xml:space="preserve">
    <value>Project Status</value>
  </data>
  <data name="ProjectStatusRequired" xml:space="preserve">
    <value>Status is required</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="Spanish" xml:space="preserve">
    <value>Spanish</value>
  </data>
  <data name="TaskAssignedTo" xml:space="preserve">
    <value>Assigned To</value>
  </data>
  <data name="TaskAttachments" xml:space="preserve">
    <value>Attachments</value>
  </data>
  <data name="TaskComments" xml:space="preserve">
    <value>Comments</value>
  </data>
  <data name="TaskDescription" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="TaskEndDate" xml:space="preserve">
    <value>End Date</value>
  </data>
  <data name="TaskKey" xml:space="preserve">
    <value>Key</value>
  </data>
  <data name="TaskName" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="TaskNameRequired" xml:space="preserve">
    <value>Name is required</value>
  </data>
  <data name="TaskProject" xml:space="preserve">
    <value>Project</value>
  </data>
  <data name="TaskProjectRequired" xml:space="preserve">
    <value>Project is required</value>
  </data>
  <data name="Tasks" xml:space="preserve">
    <value>Tasks</value>
  </data>
  <data name="TaskStartDate" xml:space="preserve">
    <value>Start Date</value>
  </data>
  <data name="TaskStatus" xml:space="preserve">
    <value>Task Status</value>
  </data>
  <data name="TaskStatusRequired" xml:space="preserve">
    <value>Task Status is required</value>
  </data>
  <data name="UserEmailAddress" xml:space="preserve">
    <value>Email address</value>
  </data>
  <data name="UserEmailAddressInvalid" xml:space="preserve">
    <value>Email address is invalid</value>
  </data>
  <data name="UserEmailAddressRequired" xml:space="preserve">
    <value>Email address is required</value>
  </data>
  <data name="UserFirstName" xml:space="preserve">
    <value>First Name</value>
  </data>
  <data name="UserFirstNameRequired" xml:space="preserve">
    <value>First Name is required</value>
  </data>
  <data name="UserFullName" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="UserLanguage" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="UserLanguageRequired" xml:space="preserve">
    <value>Language is required</value>
  </data>
  <data name="UserLastName" xml:space="preserve">
    <value>Last Name</value>
  </data>
  <data name="UserLastNameRequired" xml:space="preserve">
    <value>Last Name is required</value>
  </data>
  <data name="UserName" xml:space="preserve">
    <value>Username</value>
  </data>
  <data name="UserNameRequired" xml:space="preserve">
    <value>Username is required</value>
  </data>
  <data name="UserPassword" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="UserPasswordRequired" xml:space="preserve">
    <value>Password is required</value>
  </data>
  <data name="UserPhoneNumber" xml:space="preserve">
    <value>Phone Number</value>
  </data>
  <data name="Users" xml:space="preserve">
    <value>Users</value>
  </data>
  <data name="UserUserType" xml:space="preserve">
    <value>User Type</value>
  </data>
  <data name="UserUserTypeRequired" xml:space="preserve">
    <value>User Type is required</value>
  </data>
  <data name="ViewTasks" xml:space="preserve">
    <value>View Tasks</value>
  </data>
  <data name="DeleteProject" xml:space="preserve">
    <value>Delete Project</value>
  </data>
  <data name="DeleteTasks" xml:space="preserve">
    <value>Delete Tasks</value>
  </data>
  <data name="DeleteUsers" xml:space="preserve">
    <value>Delete Users</value>
  </data>
  <data name="EditProject" xml:space="preserve">
    <value>Edit Project</value>
  </data>
  <data name="EditTask" xml:space="preserve">
    <value>Edit Task</value>
  </data>
  <data name="EditUser" xml:space="preserve">
    <value>Edit User</value>
  </data>
  <data name="ProjectSummary" xml:space="preserve">
    <value>Project Summary</value>
  </data>
  <data name="AddComment" xml:space="preserve">
    <value>Add Comment</value>
  </data>
  <data name="Attachments" xml:space="preserve">
    <value>Attachments</value>
  </data>
  <data name="Comment" xml:space="preserve">
    <value>Comment</value>
  </data>
  <data name="Filterby" xml:space="preserve">
    <value>Filter by</value>
  </data>
  <data name="LogIn" xml:space="preserve">
    <value>Log In</value>
  </data>
  <data name="Upload" xml:space="preserve">
    <value>Upload</value>
  </data>
  <data name="Areyousureyouwanttodeletethis" xml:space="preserve">
    <value>Are you sure you want to delete this?</value>
  </data>
  <data name="EditProfile" xml:space="preserve">
    <value>Edit Profile</value>
  </data>
  <data name="Numberofcompletedtasks" xml:space="preserve">
    <value>Number of completed tasks</value>
  </data>
  <data name="Numberoftasksinprogress" xml:space="preserve">
    <value>Number of tasks in progress</value>
  </data>
  <data name="Numberoftasksnotstarted" xml:space="preserve">
    <value>Number of tasks not started</value>
  </data>
  <data name="Totalnumberoftasks" xml:space="preserve">
    <value>Total number of tasks</value>
  </data>
  <data name="Yourdetailshavebeenupdated" xml:space="preserve">
    <value>Your details have been updated</value>
  </data>
  <data name="Project" xml:space="preserve">
    <value>Project</value>
  </data>
  <data name="DeleteUser" xml:space="preserve">
    <value>Delete User</value>
  </data>
  <data name="Enddateshouldbegraterthanstartdate" xml:space="preserve">
    <value>End date should be greater than start date</value>
  </data>
  <data name="Create" xml:space="preserve">
    <value>Create</value>
  </data>
  <data name="CreateUser" xml:space="preserve">
    <value>Create User</value>
  </data>
  <data name="User" xml:space="preserve">
    <value>User</value>
  </data>
  <data name="UserDetails" xml:space="preserve">
    <value>User Details</value>
  </data>
  <data name="UserNameTaken" xml:space="preserve">
    <value>Username has been taken</value>
  </data>
</root>